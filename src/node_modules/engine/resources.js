/* eslint no-console: 'off' */
import axios from 'axios';
import {loaders, utils} from 'pixi.js';
import {textureMap} from 'shared/config';

export const rawCache = Object.create(null);
export const baseTextureCache = utils.BaseTextureCache;
export const textureCache = utils.TextureCache;

export function destroy() {
  for (const key in textureCache) {
    textureCache[key].destroy();
    delete textureCache[key];
  }
  for (const key in baseTextureCache) {
    baseTextureCache[key].destroy();
    delete baseTextureCache[key];
  }
  for (const key in rawCache) {
    delete rawCache[key];
  }
}

export function init() {
  return new Promise((resolve, reject) => {
    axios.get(textureMap)
      .then((response) => {
        const map = response.data;
        const loader = new loaders.Loader();
        for (const key in map) {
          loader.add(key, map[key]);
        }
        loader.on('load', (_loader, resource) => {
          console.info(`Loaded ${resource.name} from ${resource.url}`);
        });
        // TODO: This is never called (at least on 404 responses).
        loader.on('error', (_loader, resource) => {
          console.error(`Failed to load ${resource.name} from ${resource.url}`);
        });
        loader.load(() => {
          for (const key in loader.resources) {
            const resource = loader.resources[key];
            rawCache[key] = resource;
          }
          resolve();
        });
      })
      .catch((err) => {
        reject(err);
      });
  });
}
